import discord
import os
from discord.ext import commands

#—Ç–æ–∫–µ–Ω
TOKEN = os.getenv("DISCORD_TOKEN")

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ —Å –∏–Ω—Ç–µ–Ω—Ç–∞–º–∏
intents = discord.Intents.default()
intents.message_content = True

class MyBot(commands.Bot):
    def __init__(self):
        super().__init__(command_prefix="*", intents=intents)

    async def setup_hook(self):
        await self.tree.sync()
        print("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")

    async def on_ready(self):
        print(f'–ë–æ—Ç {self.user} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤!')

bot = MyBot()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
user_balances = {}
shop_items = {
    "–ú–µ—á": 100,
    "–©–∏—Ç": 150,
    "–ó–µ–ª—å–µ": 50
}
user_inventories = {}  # –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
COOLDOWN_TIME = 60  # –í—Ä–µ–º—è –∫—É–ª–¥–∞—É–Ω–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã collect
currency_symbol = "üíµ"  # –ù–∞—á–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã

### –ö–æ–º–∞–Ω–¥—ã ###

@bot.tree.command(name="collect", description="–°–æ–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏ (—Å –∫—É–ª–¥–∞—É–Ω–æ–º)")
@commands.cooldown(1, COOLDOWN_TIME, commands.BucketType.user)
async def collect(interaction: discord.Interaction):
    user_id = interaction.user.id
    if user_id not in user_balances:
        user_balances[user_id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç

    earnings = 100  # –°—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–∏ —Å–±–æ—Ä–µ
    user_balances[user_id] += earnings

    embed = discord.Embed(
        title="üí∞ –°–±–æ—Ä —Å—Ä–µ–¥—Å—Ç–≤",
        description=f"–í—ã —Å–æ–±—Ä–∞–ª–∏ {earnings} –º–æ–Ω–µ—Ç!",
        color=discord.Color.green()
    )
    embed.add_field(name="–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:", value=f"{user_balances[user_id]} –º–æ–Ω–µ—Ç", inline=False)
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="balance", description="–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞")
async def balance(interaction: discord.Interaction):
    user_id = interaction.user.id
    balance = user_balances.get(user_id, 0)

    embed = discord.Embed(
        title="üìä –í–∞—à –±–∞–ª–∞–Ω—Å",
        description=f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance} {currency_symbol}.",
        color=discord.Color.blue()
    )
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="shop", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ")
async def shop(interaction: discord.Interaction):
    if not shop_items:
        await interaction.response.send_message("üõí –ú–∞–≥–∞–∑–∏–Ω –ø—É—Å—Ç.")
        return

    shop_list = "\n".join([f"**{item}**: {price} {currency_symbol}" for item, price in shop_items.items()])
    embed = discord.Embed(
        title="üõí –ú–∞–≥–∞–∑–∏–Ω",
        description=shop_list,
        color=discord.Color.gold()
    )
    await interaction.response.send_message(embed=embed)

# –ö–æ–º–∞–Ω–¥–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
@bot.tree.command(name="inventory", description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–≥—Ä–æ–∫–∞")
async def inventory(interaction: discord.Interaction):
    user_id = interaction.user.id

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    inventory = user_inventories.get(user_id, {})

    if not inventory:
        await interaction.response.send_message("üóÉÔ∏è –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    inventory_list = "\n".join([f"{count} - {item}" for item, count in inventory.items()])

    embed = discord.Embed(
        title="üóÉÔ∏è –í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å",
        description=inventory_list,
        color=discord.Color.blue()
    )
    await interaction.response.send_message(embed=embed)

# –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç
@bot.tree.command(name="create_item", description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç")
async def create_item(interaction: discord.Interaction, name: str, price: int, description: str):
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ
    shop_items[name] = price

    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏
    embed = discord.Embed(
        title="‚úÖ –ü—Ä–µ–¥–º–µ—Ç —Å–æ–∑–¥–∞–Ω!",
        description=f"–í—ã —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç **{name}** –∑–∞ **{price} –º–æ–Ω–µ—Ç**.\n–û–ø–∏—Å–∞–Ω–∏–µ: {description}",
        color=discord.Color.green()
    )
    await interaction.response.send_message(embed=embed)

# –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç
@bot.tree.command(name="delete_item", description="–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞")
async def delete_item(interaction: discord.Interaction, item: str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ
    if item not in shop_items:
        await interaction.response.send_message(f"‚ùå –¢–æ–≤–∞—Ä `{item}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω–µ.")
        return

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
    del shop_items[item]

    embed = discord.Embed(
        title="üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        description=f"–ü—Ä–µ–¥–º–µ—Ç `{item}` –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.",
        color=discord.Color.red()
    )
    await interaction.response.send_message(embed=embed)

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã
@bot.tree.command(name="set_currency", description="–ò–∑–º–µ–Ω–∏—Ç—å —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã")
async def set_currency(interaction: discord.Interaction, symbol: str):
    global currency_symbol
    currency_symbol = symbol
    embed = discord.Embed(
        title="üí∞ –°–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã –∏–∑–º–µ–Ω–µ–Ω!",
        description=f"–ù–æ–≤—ã–π —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã: {currency_symbol}",
        color=discord.Color.green()
    )
    await interaction.response.send_message(embed=embed)

# –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
@bot.tree.command(name="buy", description="–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –º–∞–≥–∞–∑–∏–Ω–µ")
async def buy(interaction: discord.Interaction, item: str, quantity: int = 1):
    user_id = interaction.user.id
    if user_id not in user_balances:
        user_balances[user_id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç

    if item not in shop_items:
        await interaction.response.send_message(f"‚ùå –¢–æ–≤–∞—Ä `{item}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–∞–≥–∞–∑–∏–Ω–µ.")
        return

    price = shop_items[item]  # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
    total_cost = price * quantity

    if user_balances[user_id] < total_cost:
        await interaction.response.send_message(f"‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ {quantity} –µ–¥–∏–Ω–∏—Ü —Ç–æ–≤–∞—Ä–∞ `{item}`.")
        return

    # –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    user_balances[user_id] -= total_cost

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_inventories:
        user_inventories[user_id] = {}
    
    if item in user_inventories[user_id]:
        user_inventories[user_id][item] += quantity  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    else:
        user_inventories[user_id][item] = quantity  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç

    embed = discord.Embed(
        title="‚úÖ –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!",
        description=f"–í—ã –∫—É–ø–∏–ª–∏ {quantity} –µ–¥–∏–Ω–∏—Ü —Ç–æ–≤–∞—Ä–∞ `{item}` –∑–∞ {total_cost} {currency_symbol}.",
        color=discord.Color.green()
    )
    embed.add_field(name="–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:", value=f"{user_balances[user_id]} {currency_symbol}", inline=False)
    await interaction.response.send_message(embed=embed)

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç
@bot.tree.command(name="use_item", description="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è")
async def use_item(interaction: discord.Interaction, item: str, quantity: int = 1):
    user_id = interaction.user.id

    if user_id not in user_inventories or item not in user_inventories[user_id]:
        await interaction.response.send_message(f"‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ `{item}` –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.")
        return

    # –ü–æ–¥—Å—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    item_count = user_inventories[user_id].get(item, 0)

    if item_count < quantity:
        await interaction.response.send_message(f"‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ `{item}` –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è {quantity} —Ä–∞–∑.")
        return

    # –£–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    user_inventories[user_id][item] -= quantity
    if user_inventories[user_id][item] == 0:
        del user_inventories[user_id][item]  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç, –µ—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞–ª–æ 0

    embed = discord.Embed(
        title="‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞",
        description=f"–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ {quantity} –ø—Ä–µ–¥–º–µ—Ç–æ–≤ `{item}`.",
        color=discord.Color.green()
    )
    embed.add_field(name="–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", value=", ".join([f"{count} - {name}" for name, count in user_inventories[user_id].items()]) or "–ü—É—Å—Ç–æ", inline=False)
    await interaction.response.send_message(embed=embed)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

@bot.tree.command(name="sell_item", description="–ü—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è")
async def sell_item(interaction: discord.Interaction, item: str):
    user_id = interaction.user.id
    if user_id not in user_balances:
        user_balances[user_id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç

    if user_id not in user_inventories or item not in user_inventories[user_id]:
        await interaction.response.send_message(f"‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Ç–æ–≤–∞—Ä–∞ `{item}` –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏.")
        return

    price = shop_items.get(item, 50)  # –ü—Ä–æ–¥–∞–µ–º –ø–æ –ø–æ–ª–æ–≤–∏–Ω–µ –∏–ª–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ü–µ–Ω–µ
    user_balances[user_id] += price
    user_inventories[user_id].remove(item)

    embed = discord.Embed(
        title="‚úÖ –ü—Ä–æ–¥–∞–∂–∞ —É—Å–ø–µ—à–Ω–∞!",
        description=f"–í—ã –ø—Ä–æ–¥–∞–ª–∏ `{item}` –∑–∞ {price} –º–æ–Ω–µ—Ç.",
        color=discord.Color.green()
    )
    embed.add_field(name="–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:", value=f"{user_balances[user_id]} –º–æ–Ω–µ—Ç", inline=False)
    embed.add_field(name="–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å", value=", ".join(user_inventories[user_id]) or "–ü—É—Å—Ç–æ", inline=False)
    await interaction.response.send_message(embed=embed)

# –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏ –ª—é–±–æ–º—É –∏–≥—Ä–æ–∫—É
@bot.tree.command(name="add_money", description="–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∏–≥—Ä–æ–∫—É")
async def add_money(interaction: discord.Interaction, player: discord.Member, amount: int):
    user_id = player.id
    if user_id not in user_balances:
        user_balances[user_id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç

    user_balances[user_id] += amount
    embed = discord.Embed(
        title="‚úÖ –î–µ–Ω—å–≥–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã!",
        description=f"–í—ã –¥–æ–±–∞–≤–∏–ª–∏ {amount} –º–æ–Ω–µ—Ç –∏–≥—Ä–æ–∫—É {player.mention}.",
        color=discord.Color.green()
    )
    embed.add_field(name="–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞", value=f"{user_balances[user_id]} –º–æ–Ω–µ—Ç", inline=False)
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="remove_money", description="–£–¥–∞–ª–∏—Ç—å –¥–µ–Ω—å–≥–∏ —É –∏–≥—Ä–æ–∫–∞")
async def remove_money(interaction: discord.Interaction, amount: int):
    user_id = interaction.user.id
    if user_id not in user_balances:
        user_balances[user_id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç

    if user_balances[user_id] < amount:
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–æ–π —Å—É–º–º—ã.")
        return

    user_balances[user_id] -= amount
    embed = discord.Embed(
        title="‚úÖ –î–µ–Ω—å–≥–∏ —É–¥–∞–ª–µ–Ω—ã!",
        description=f"–í—ã —É–¥–∞–ª–∏–ª–∏ {amount} –º–æ–Ω–µ—Ç. –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balances[user_id]} –º–æ–Ω–µ—Ç.",
        color=discord.Color.red()
    )
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="leaderboard", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤")
async def leaderboard(interaction: discord.Interaction):
    sorted_balances = sorted(user_balances.items(), key=lambda x: x[1], reverse=True)
    leaderboard_list = "\n".join([f"<@{user_id}>: {balance} –º–æ–Ω–µ—Ç" for user_id, balance in sorted_balances])
    embed = discord.Embed(
        title="üèÜ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤",
        description=leaderboard_list or "–ü–æ–∫–∞ –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤.",
        color=discord.Color.gold()
    )
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="reset_money", description="–°–±—Ä–æ—Å–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∏–≥—Ä–æ–∫–∞")
async def reset_money(interaction: discord.Interaction, player: discord.Member):
    user_id = player.id
    user_balances[user_id] = 0
    embed = discord.Embed(
        title="‚úÖ –î–µ–Ω—å–≥–∏ —Å–±—Ä–æ—à–µ–Ω—ã!",
        description=f"–î–µ–Ω—å–≥–∏ –∏–≥—Ä–æ–∫–∞ <@{user_id}> –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã.",
        color=discord.Color.red()
    )
    await interaction.response.send_message(embed=embed)
#–±–∞–Ω
@bot.tree.command(name="ban", description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
@commands.has_permissions(ban_members=True)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ –∫–æ–º–∞–Ω–¥—É –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –±–∞–Ω
async def ban(interaction: discord.Interaction, user: discord.Member, reason: str = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
    try:
        await user.ban(reason=reason)
        embed = discord.Embed(
            title="üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.\n–ü—Ä–∏—á–∏–Ω–∞: {reason}",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed)
    except discord.Forbidden:
        await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –±–∞–Ω —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

# —Ä–∞–∑–±–∞–Ω
@bot.tree.command(name="unban", description="–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
@commands.has_permissions(ban_members=True)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ –∫–æ–º–∞–Ω–¥—É –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —Ä–∞–∑–±–∞–Ω
async def unban(interaction: discord.Interaction, user_id: int):
    try:
        user = await bot.fetch_user(user_id)
        await interaction.guild.unban(user)
        embed = discord.Embed(
            title="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω.",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed)
    except discord.NotFound:
        await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–±–∞–Ω–µ–Ω.", ephemeral=True)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

#–º—å—é—Ç –∏ —Ä–∞–∑–º—å—é—Ç
@bot.tree.command(name="mute", description="–ú—å—é—Ç–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
async def mute(interaction: discord.Interaction, member: discord.Member, duration: int):
    try:
        # –ú—å—é—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await member.timeout(duration=discord.utils.utcnow() + discord.timedelta(seconds=duration))
        embed = discord.Embed(
            title="üîá –ú—å—é—Ç",
            description=f"{member.mention} –±—ã–ª –∑–∞–º—å—é—á–µ–Ω –Ω–∞ {duration} —Å–µ–∫—É–Ω–¥.",
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º—å—é—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—à–∏–±–∫–∞: {e}")

@bot.tree.command(name="unmute", description="–†–∞–∑–º—å—é—Ç–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def unmute(interaction: discord.Interaction, member: discord.Member):
    try:
        # –†–∞–∑–º—å—é—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await member.timeout(None)
        embed = discord.Embed(
            title="üîä –†–∞–∑–º—å—é—Ç",
            description=f"{member.mention} –±—ã–ª —Ä–∞–∑–º—å—é—á–µ–Ω.",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º—å—é—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—à–∏–±–∫–∞: {e}")

#–¥–µ–Ω—å–≥–∏ —Ä–æ–ª—å
@bot.tree.command(name="role_income", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Ö–æ–¥ –æ—Ç —Ä–æ–ª–∏")
async def role_income(interaction: discord.Interaction, role: discord.Role, amount: int):
    for member in role.members:
        if member.id not in user_balances:
            user_balances[member.id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–ª–∞–Ω—Å, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        user_balances[member.id] += amount

    embed = discord.Embed(
        title="‚úÖ –î–æ—Ö–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω!",
        description=f"–î–æ—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ {amount} –º–æ–Ω–µ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Ä–æ–ª–∏ `{role.name}`.",
        color=discord.Color.green()
    )
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="set_cooldown", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É–ª–¥–∞—É–Ω –¥–ª—è –∫–æ–º–∞–Ω–¥—ã collect")
async def set_cooldown(interaction: discord.Interaction, seconds: int):
    global COOLDOWN_TIME
    COOLDOWN_TIME = seconds
    embed = discord.Embed(
        title="‚è≥ –ö—É–ª–¥–∞—É–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!",
        description=f"–ö—É–ª–¥–∞—É–Ω –¥–ª—è –∫–æ–º–∞–Ω–¥—ã collect —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {seconds} —Å–µ–∫—É–Ω–¥.",
        color=discord.Color.green()
    )
    await interaction.response.send_message(embed=embed)


#–∑–∞–ø—É—Å–∫
bot.run(TOKEN)
